/*
 * This C++ source file was generated by the Gradle 'init' task.
 */

#include "mfem-mesh-reader.h"
#include <cassert>
#include <iostream>
#include <string>
using namespace std;

const char* meshDir = "/home/bsettlemyer/workspace/taproot/data";

void testOpen() {
    // Test opening a valid file
    string meshFile = string(meshDir) + string("/snoise_60_mesh"); 
    //int mh = mfem_open_mesh(meshFile.c_str());
    //assert(mh >= 0);

    // Test opening an invalid file
    //meshFile = string(meshDir) + string("/invalid-file-name"); 
    //mh = mfem_open_mesh(meshFile.c_str());
    //assert(mh == -1);

    cerr << "testOpen() Complete" << endl;
}

void testClose() {

    string meshFile = string(meshDir) + string("/snoise_60_mesh"); 
    //int mh = mfem_open_mesh(meshFile.c_str());
    //int rc = mfem_close_mesh(mh);
    //assert(mh >= 0);
    //assert(rc == 0);
    cerr << "testClose() Complete" << endl;
}

void testRead() {

    string meshFile = string(meshDir) + string("/snoise_60_mesh"); 
    string eGFFile = string(meshDir) + string("/snoise_60_e"); 
    string rhoGFFile = string(meshDir) + string("/snoise_60_rho"); 
    string vGFFile = string(meshDir) + string("/snoise_60_v"); 
    int mh = mfem_open_laghos_mesh(meshFile.c_str(), 
                                   eGFFile.c_str(), 
                                   rhoGFFile.c_str(), 
                                   vGFFile.c_str());
    assert(mh >= 0);

    // Read all of the mesh elements into an array
    laghos_mesh_point_t points[128] = {0};
    mfem_mesh_iterator_t iter = 0;

    int count = mfem_read_laghos_mesh(mh, &iter, points, 128);
    cerr << "Points returned: " << count << endl;
    for (int i = 0; i < count; i++)
        cerr << "Point " << i << " " << points[i].element_id << " <x,y,z>=<" 
             << points[i].x << "," 
             << points[i].y << "," 
             << points[i].z << "> e=" 
             << points[i].e << " rho=" 
             << points[i].rho << " v_x=" 
             << points[i].v_x << " v_y=" 
             << points[i].v_y << " v_z=" 
             << points[i].v_z << " " 
             << endl;
    assert(count == 128);

    int rc = mfem_close_laghos_mesh(mh);
    assert(rc == 0);
    cerr << "testRead() Complete" << endl;
}

int main() {
    testOpen();
    testClose();
    testRead();
    return 0;
}